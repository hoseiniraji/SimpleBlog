@model SimpleBlog.Framework.IPagination
@{
    int len = 3;
    int start = Model.CurrentPage - len;
    int end = Model.CurrentPage + len;
    if (start <= 0) { start = 1; }
    if (end > Model.TotalPages) { end = Model.TotalPages; }
    var fullUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}?";
    var cleanQuery = string.Join("&", Context
                                        .Request
                                        .Query
                                        .Where(q => q.Key != "p") // remove existing 'p' to avoid duplicate query. the query 'p', will be add on each page button
                                        .Select(q => $"{q.Key}={q.Value}"));
    if (!string.IsNullOrEmpty(cleanQuery))
    {
        // if already there is other queries, add extra '&' for separating the 'p' query
        cleanQuery += "&";
    }
    fullUrl += cleanQuery;
    // example : /some/url/part?q1=v1&

}




<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage >= len + 2)
        {
            <li class="page-item">
                <a class="page-link" href="@(fullUrl + "p=1")" aria-label="1">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">1</span>
                </a>
            </li>
            <li class="page-item disabled"><a class="page-link" href="#" tabindex="-1">...</a></li>
        }

        @for (int i = start; i <= end; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")"><a class="page-link" href="@(fullUrl + "p=" + i)">@i</a></li>
        }

        @if (Model.TotalPages >= end + 1)
        {
            <li class="page-item disabled"><a class="page-link" href="#" tabindex="-1">...</a></li>
            <li class="page-item">
                <a class="page-link" href="@(fullUrl + "p=" + Model.TotalPages)" aria-label="@Model.TotalPages">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">@Model.TotalPages</span>
                </a>
            </li>
        }

    </ul>
</nav>